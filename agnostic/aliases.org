#+TITLE: SHELL ALIASES
#+PROPERTY: header-args :cache yes
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :padline no
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode (identity #o600)
#+BEGIN_SRC sh :tangle ~/.aliases
case "$OSTYPE" in
    darwin*)
        alias bye="sudo shutdown -h now"
        alias cpu="sysctl -n machdep.cpu.brand_string"
        alias enabled_services='sudo launchctl list'
        alias grep='grep --color=always'
        alias l='ls -Gh'
        alias ll='ls -laGh'
        alias lsblk='diskutil list'
        alias rb='sudo reboot'
        alias srch='sudo /usr/libexec/locate.updatedb && locate -i'
        command -v brew >/dev/null 2>&1 && alias update='brew update && brew upgrade --greedy && softwareupdate -i --all'
        command -v osx-cpu-temp >/dev/null 2>&1 && alias temp='osx-cpu-temp -c -g -f'
        alias zzz='pmset sleepnow'
        ;;
    freebsd*)
        alias bye="sudo shutdown -p now"
        alias rb='sudo reboot'
        alias l='ls -Gh'
        alias ll='ls -laGh'
        alias grep='grep --color=always'
        alias lsblk='geom disk list'
        alias update='sudo pkg update && sudo pkg upgrade'
        ;;
    linux*)
        alias bye="systemctl poweroff"
        alias powertune='sudo powertop --auto-tune'
        alias enabled_services='systemctl list-unit-files --state=enabled'
        alias ipa="ip -brief -color -pretty address | grep -v lo"
        alias ls='ls --color=always'
        alias l='ls -F'
        alias la='ls -aF'
        alias ll='ls -Fhl'
        alias lla='ls -aFhl'
        alias rb='systemctl reboot'
        alias srch='sudo updatedb && locate -i'
        alias zzz='systemctl suspend'
        alias ZZZ='systemctl hibernate'
        if command -v lsb_release &> /dev/null; then
            case "$(lsb_release -is)" in
                Debian)
                    alias update="sudo apt -t $(lsb_release -cs)-backports update -y && sudo apt -t $(lsb_release -cs)-backports dist-upgrade -y"
                    alias install="sudo apt -t $(lsb_release -cs)-backports -y"
                    ;;
                Ubuntu)
                    alias update="sudo apt update -y && sudo apt dist-upgrade -y"
                    alias install="sudo apt install -y"
                    ;;
                Debian|Ubuntu)
                    alias clean="sudo apt autoremove -y && sudo apt autoclean -y && sudo apt clean -y"
                    alias purge="sudo apt purge -y"
                    alias bat="batcat"
                    ;;
                CentOS|Fedora)
                    alias clean="sudo dnf autoremove"
                    alias update="sudo dnf upgrade"
                    alias install="sudo dnf install"
                    alias remove="sudo dnf remove"
                    ;;
                Arch*|Manjaro*)
                    alias clean="sudo pacman -Rcns $(pacman -Qtdq)"
                    alias update="sudo pacman --sync --refresh --sysupgrade"
                    alias install="sudo pacman --sync --needed"
                    alias remove="sudo pacman --remove --nosave --recursive --cascade"
                    ;;
            esac
        fi
        ;;
    netbsd*)
        alias battery='envstat -d acpibat0'
        alias bye='shutdown -p now'
        alias l='ls -F'
        alias l='ls -F'
        alias la='ls -aF'
        alias ll='ls -Fhl'
        alias lla='ls -aFhl'
        alias pkg='pkgin'
        alias spkg='sudo pkgin'
        alias rb='shutdown -r now'
        alias zzz='sudo sysctl -w hw.acpi.sleep.state=3'
        ;;
    openbsd*)
        alias battery='sysctl -a | grep bat'
        alias bye='shutdown -p now'
        alias killall='zap -f'
        alias l='ls -F'
        alias la='ls -aF'
        alias ll='ls -Fhl'
        alias lla='ls -aFhl'
        alias lock='lock -np' # no timeout & use user's password
        alias pkg_search='pkg_info -Q'
        alias sensors='sysctl hw.sensors'
        alias srch='doas /usr/libexec/locate.updatedb && locate -i'
        alias temp='sysctl hw.sensors | egrep -i "fan|temp"'
        ;;
esac

alias add="awk '{s+=\$1} END {print s}'" # adds columns of numbers via stdin
alias cp='cp -i'
alias d='docker'
alias d2d='for f in *; do mv $f ${f// - /-}; done' # convert ' - ' to '-'
alias df='df -h'
alias dh='dirs -v'
alias du='du -h'
alias fuck='sudo $(history -p \!\!)'
alias h='history'
alias ha='history 0'
alias j='jobs -l'
alias lc='grep -cv "^$"' # line count ignoring empty lines
alias m='make'
alias mc='make clean'
alias mi='make install clean'
alias mkdir='mkdir -p'
alias mv='mv -i'
alias p='pwd'
PBAT="/sys/class/power_supply/cw2015-battery"
alias pbat='printf "$(cat $PBAT/status): $(cat $PBAT/capacity)%%\n"'
alias path="echo $PATH | tr -s : \\\n"
alias pg='pgrep -ail'
alias ping4='ping -c 4'
alias pingg='ping -c 4 8.8.8.8'
alias pip='pip3'
alias python='python3'
alias py='python3'
alias rm='rm -i'
alias s2us='for f in *; do mv $f ${f// /_}; done' # convert ' ' to '_'
alias sshaa='eval $(ssh-agent) && ssh-add'
alias uc='grep -Ev "^#|^\s+#|^\t+#|^$"' # uncomment
alias up='uptime'

# command -v bat >/dev/null 2>&1 && alias cat='bat'
command -v ansible-playbook >/dev/null 2>&1 && \
    { \
      alias ac='PATH=/usr/bin ansible-console';
      alias ap='PATH=/usr/bin ansible-playbook';
      alias aph='PATH=/usr/bin ansible-playbook -i $HOME/ansible/hosts.ini -K';
    }
command -v colordiff >/dev/null 2>&1 && alias diff='colordiff'
command -v emacs &>/dev/null && alias e='emacs -nw'
command -v emacsclient &>/dev/null && alias ec='emacsclient -c -a "" -nw'
command -v exa &>/dev/null && \
    { \
      alias l='exa'; \
      alias la='exa --all'; \
      alias ll='exa --long --group --git'; \
      alias llg='exa --long --group --grid --git'; \
      alias lla='exa --long --all --group --git'; \
      alias llag='exa --long --all --group --grid --git'; \
      alias lt='exa --tree --group'; \
      alias llt='exa --tree --long --group --git'; \
    }
command -v nix-env &>/dev/null && \
    { \
      alias nix-install='nix-env -iA'; \
      alias nix-install="nix-env -iA"; \
      alias nix-remove="nix-env -e"; \
      alias nix-search="nix-env -qaP"; \
      alias nix-update="nix-channel --update && nix-env -u '*'"; \
    }

command -v git &>/dev/null && alias g='git'
command -v sudo &>/dev/null && alias se='sudoedit'

if command -v tmux &>/dev/null; then
    # https://github.com/areina/stumpwm.d/blob/master/applications.lisp
    tmux_create_or_attach () {
        [ -z "$TMUX" ] && \
            { tmux -q has-session && tmux attach -d || tmux -u; } || \
                { tmux new-session -d \; choose-tree -Zs; }
    }
    alias t='tmux_create_or_attach'
    alias tk='tmux kill-session'
    alias tka='tmux kill-session -a'
fi

if command -v vim &>/dev/null; then
    alias vi="vim"
elif command -v nvim &> /dev/null; then
    alias vi="nvim"
elif command -v elvis &> /dev/null; then
    alias vi="elvis"
fi

command -v startx &>/dev/null && alias x='exec startx; logout'
command -v xclip &>/dev/null && alias clipboard='xclip -selection "clipboard"'

if command -v kubectl &>/dev/null; then
    alias k="kubectl"
    alias kc="kubectl config"
    alias kd="kubectl describe"
    alias ke="kubectl edit"
    alias kg="kubectl get"
    alias kl="kubectl logs"
    alias kx="kubectl exec --stdin --tty"
    complete -F __start_kubectl k
    complete -F __start_kubectl kc
    complete -F __start_kubectl kd
    complete -F __start_kubectl ke
    complete -F __start_kubectl kg
    complete -F __start_kubectl kl
    complete -F __start_kubectl kx
fi

alias gsync="github && gitlab -g be ds"
alias gchk="github status && gitlab status -g be ds"
#+END_SRC
* COMMENT Local Variables                                  :NOEXPORT:ARCHIVE:
# Local Variables:
# eval: (add-hook 'after-save-hook 'org-babel-tangle nil t)
# End:
